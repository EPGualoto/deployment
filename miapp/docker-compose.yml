version: '3.8'

services:
  dbserver:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "c:/db-distribuida:/var/lib/postgresql/data"
    ports:
      - "5433:5432"
    networks:
      - app-network

  consul:
    image: consul:1.15.4
    command: |
      agent -dev
      -ui
      -bind 0.0.0.0
      -client 0.0.0.0
    ports:
      - "8500:8500"
    networks:
      - app-network

  proxy:
    image: traefik:3.4.1
    command:
      --api.insecure=true
      --api.dashboard=true
      --providers.consulCatalog
      --providers.consulCatalog.endpoint.address=consul:8500
      --providers.consulCatalog.refreshInterval=10s
      --providers.consulCatalog.exposedByDefault=false
      --entryPoints.http.address=":80"
      --entryPoints.metrics.address=":8082"
      --metrics.prometheus=true
      --metrics.prometheus.entryPoint=metrics
    ports:
      - "8888:8080"
      - "80:80"
      - "8082:8082"
    depends_on:
      - consul
    networks:
      - app-network

  authors:
    image: epgualoto24/app-authors:latest
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://dbserver:5432/distribuida
      QUARKUS_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      QUARKUS_SMALLRYE_HEALTH_UI_ENABLE: true
    ports:
      - "7070:8080"
    depends_on:
      - dbserver
      - consul
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-authors.rule=PathPrefix(`/app-authors`)"
      - "traefik.http.routers.app-authors.entrypoints=http"
      - "traefik.http.routers.app-authors.service=app-authors"
      - "traefik.http.middlewares.strip-prefix-authors.stripPrefix.prefixes=/app-authors"
      - "traefik.http.routers.app-authors.middlewares=strip-prefix-authors"
    networks:
      - app-network

  books:
    image: epgualoto24/app-books:latest
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://dbserver:5432/distribuida
      QUARKUS_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      QUARKUS_SMALLRYE_HEALTH_UI_ENABLE: true
    ports:
      - "6060:8080"
    depends_on:
      - dbserver
      - consul
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-books.rule=PathPrefix(`/app-books`)"
      - "traefik.http.routers.app-books.entrypoints=http"
      - "traefik.http.routers.app-books.service=app-books"
      - "traefik.http.middlewares.strip-prefix-books.stripPrefix.prefixes=/app-books"
      - "traefik.http.routers.app-books.middlewares=strip-prefix-books"
    networks:
      - app-network

  customers:
    image: epgualoto24/app-customers:latest
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://dbserver:5432/distribuida
      QUARKUS_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      QUARKUS_SMALLRYE_HEALTH_UI_ENABLE: true
    ports:
      - "5050:8080"
    depends_on:
      - dbserver
      - consul
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-customers.rule=PathPrefix(`/app-customers`)"
      - "traefik.http.routers.app-customers.entrypoints=http"
      - "traefik.http.routers.app-customers.service=app-customers"
      - "traefik.http.middlewares.strip-prefix-customers.stripPrefix.prefixes=/app-customers"
      - "traefik.http.routers.app-customers.middlewares=strip-prefix-customers"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - "./config/etc/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "4000:9090"
    depends_on:
      - authors
      - books
      - customers
      - proxy
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
